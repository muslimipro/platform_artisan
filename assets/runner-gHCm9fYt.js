import{ak as L,al as N,a5 as t,ad as V,ae as D,R as u,am as j,af as f,an as z,a9 as H,ao as G}from"./vue-codemirror.esm-CdIqRNbs.js";import{r as v,G as P}from"./index-BEuVwAr8.js";function J(C,b,T,F,n,y,M){const o=v(!1),i=v(!1),r=v(!1),h=v(!1),w=v(""),R=v(!1),q=L(),c=N();let k,p,A;I();function g(){return new Promise(a=>{i.value&&a(),I();const e=P(o,l=>{l||(e.stop(),a())})})}function x(){return new Promise(a=>{if(!o.value){a();return}const e=P(o,l=>{l||(e(),a())})})}async function I(){i.value||(o.value=!0,F(),k=new Worker(new URL("/assets/worker-CGF4IHq1.js",import.meta.url),{type:"module"}),k.onmessage=async a=>{const{content:e,line:l}=a.data;switch(e.command){case t.Error:b(e.request.message),h.value=!0,w.value=e.request.message,r.value=!1,R.value=!1;break;case t.KeyboardInterrupt:b(e.request.message),r.value=!1,R.value=!1;break;case D.Initialized:p=e.request.sharedArrayInterrupt,A=e.request.sharedWakeupArray,o.value=!1;break;case D.Finished:r.value=!1,c.stop(),q.stop();break;case t.Output:b(e.request.output);break;case t.PinSetValue:n(e.request.pin,e.request);break;case t.PinSetMode:n(e.request.pin,e.request);break;case t.PinSetPull:n(e.request.pin,e.request);break;case t.PwmFreq:n(e.request.pin,{freq:e.request.freq});break;case t.PwmDutyU16:n(e.request.pin,{value:e.request.duty_u16/V});break;case t.DisplayText:{const{text:s,x:m,y:d}=e.request;T(s,m,d)}break;case t.DisplayClear:F();break;case t.I2CWriteToMem:{const s=M(e.request.sda,e.request.scl);s.address===e.request.addr&&s.write(e.request.memaddr,e.request.buf)}break;case t.NeoPixelWrite:n(e.request.pin,{arr:e.request.pixels});break;case t.RawOutput:b(e.request.output);break}if(c.state.value==u.Continue)j(e)&&c.storeInputToResult(e)!=u.Continue&&(c.state.value=u.Finish,q.state.value=u.Finish);else switch(e.command){case f.Input:{const s=await C.readChar();Atomics.store(e.result,0,s)}break;case f.PinGetValue:y(e.request.pin).value>.4?Atomics.store(e.result,0,1):Atomics.store(e.result,0,0);break;case f.PinGetMode:{const s=y(e.request.pin);Atomics.store(e.result,0,s.mode)}break;case f.PinGetPull:{const s=y(e.request.pin);Atomics.store(e.result,0,s.pull)}break;case f.AdcReadU16:{const s=y(e.request.pin);Atomics.store(e.result,0,s.value*65535)}break;case f.I2CReadFromMem:{const{request:s,result:m}=e,d=M(s.sda,s.scl);d.address===s.addr?d.read(m,s.memaddr,s.nbytes):Atomics.store(m,s.nbytes,1)}break;case f.I2CScan:{const{request:s,result:m}=e,d=M(s.sda,s.scl);Atomics.store(m,0,d.address)}break}z(e)||q.pushResult(e,l)===u.Finish&&(c.state.value=u.Finish,q.state.value=u.Finish),A&&(Atomics.store(A,0,1),Atomics.notify(A,0,1))},i.value=!0)}function E(){for(let a=0;a<29;a++)n(a,{value:0,freq:0,mode:H.IN});F()}async function U(a){await x(),i.value||await g(),r.value=!0,h.value=!1,w.value="",p&&(p[0]=0,p[1]=0),k.postMessage({command:"runPython",code:a,isReplay:c.state.value==u.Continue})}function S(){r.value&&(R.value=!0,p[0]=G,p[1]=G,C.resolvers.length&&C.resolvers.shift()(0))}function O(){return new Promise(a=>{if(r.value){S();const e=P(r,l=>{l||(e.stop(),a())})}else a()})}function W(){k.terminate(),r.value=!1,o.value=!1,i.value=!1,h.value=!1,w.value="",k.onmessage=null}function K(){i.value&&W(),I()}return{connect:I,loadingPromise:x,connectPromise:g,reconnect:K,disconnect:W,stop:S,stopPromise:O,run:U,reset:E,isLoading:o,isConnected:i,isRunning:r,isRunError:h,isStopping:R,recorder:q,replayer:c,runError:w}}export{J as n};
